Index: lsb/lsb_release.py
===================================================================
--- lsb.orig/lsb_release.py	2011-12-23 10:15:05.786187192 -0430
+++ lsb/lsb_release.py	2011-12-23 10:18:06.505666456 -0430
@@ -1,5 +1,7 @@
 #!/usr/bin/python
 
+# Modulo de deteccion de modulos LSB para Canaima 3.0, basado en:
+
 # LSB release detection module for Debian
 # (C) 2005-09 Chris Lawrence <lawrencc@debian.org>
 
@@ -26,17 +28,11 @@
 # This should really be included in apt-cache policy output... it is already
 # in the Release file...
 RELEASE_CODENAME_LOOKUP = {
-    '1.1' : 'buzz',
-    '1.2' : 'rex',
-    '1.3' : 'bo',
-    '2.0' : 'hamm',
-    '2.1' : 'slink',
-    '2.2' : 'potato',
-    '3.0' : 'woody',
-    '3.1' : 'sarge',
-    '4.0' : 'etch',
-    '5.0' : 'lenny',
-    '6.0' : 'squeeze',
+    '2.1' : 'aponwao',
+    '3.0' : 'roraima',
+    '3.1' : 'auyantepui',
+    '3.2' : 'kukenan',
+    '4.0' : 'autana',
     }
 
 TESTING_CODENAME = 'unknown.new.testing'
@@ -146,9 +142,9 @@
 
     return data
 
-def guess_release_from_apt(origin='Debian', component='main',
+def guess_release_from_apt(origin='Canaima', component='main',
                            ignoresuites=('experimental'),
-                           label='Debian'):
+                           label='Canaima'):
     releases = parse_apt_policy()
 
     if not releases:
@@ -173,7 +169,7 @@
     return releases[0][1]
 
 def guess_debian_release():
-    distinfo = {'ID' : 'Debian'}
+    distinfo = {'ID' : 'Canaima'}
 
     kern = os.uname()[0]
     if kern in ('Linux', 'Hurd', 'NetBSD'):
@@ -185,15 +181,15 @@
 
     distinfo['DESCRIPTION'] = '%(ID)s %(OS)s' % distinfo
 
-    if os.path.exists('/etc/debian_version'):
+    if os.path.exists('/etc/canaima_version'):
         try:
-            release = open('/etc/debian_version').read().strip()
+            release = open('/etc/canaima_version').read().strip()
         except IOError, msg:
-            print >> sys.stderr, 'Unable to open /etc/debian_version:', str(msg)
+            print >> sys.stderr, 'Unable to open /etc/canaima_version:', str(msg)
             release = 'unknown'
             
         if not release[0:1].isalpha():
-            # /etc/debian_version should be numeric
+            # /etc/canaima_version should be numeric
             codename = lookup_codename(release, 'n/a')
             distinfo.update({ 'RELEASE' : release, 'CODENAME' : codename })
         elif release.endswith('/sid'):
@@ -205,8 +201,8 @@
             distinfo['RELEASE'] = release
 
     # Only use apt information if we did not get the proper information
-    # from /etc/debian_version or if we don't have a codename
-    # (which will happen if /etc/debian_version does not contain a
+    # from /etc/canaima_version or if we don't have a codename
+    # (which will happen if /etc/canaima_version does not contain a
     # number but some text like 'testing/unstable' or 'lenny/sid')
     #
     # This is slightly faster and less error prone in case the user
